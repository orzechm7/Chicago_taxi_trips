{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "4kpj1GWlTKCe"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## ŁADOWANIE NIEZBĘDNYCH BIBLIOTEK ORAZ DANYCH Z PLIKU DO DATAFRAME'U"
      ],
      "metadata": {
        "id": "4kpj1GWlTKCe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# IMPORT BIBLIOTEK\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import datetime as dt\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from pandas.plotting import register_matplotlib_converters\n",
        "\n",
        "%matplotlib inline \n",
        "register_matplotlib_converters()"
      ],
      "metadata": {
        "id": "cfr1Kq0DwmKX"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# WCZYTANIE DATASET'U\n",
        "data = pd.read_csv('/content/taxi_dataset.csv', on_bad_lines='skip')\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "OgXkEOadxN0o",
        "outputId": "1f2023b3-fc05-4997-eec1-a7e01678e6d6"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                      unique_key  \\\n",
              "0       e2afbb4f62fb3865c4d928a39e8a4d1e711ea8da   \n",
              "1       a663e8249660b7a3ae13c9a39378ff495564e8e6   \n",
              "2       a99a7309aea3cf70eed1644c254eb30b150ac4f2   \n",
              "3       ad0d9e702d67b0e9e7b85dd0750605ff06389c4f   \n",
              "4       350b48036f17d07f79abf53d04b811da8b6c264c   \n",
              "...                                          ...   \n",
              "199995  7c5eee2d5cfa2efbded24be40fad831ca0e0c983   \n",
              "199996  f8d6826d7b5b1e5f33a8fe6f397d0650c4d4e515   \n",
              "199997  74c5df50d09536ef33bc928e5d20a422a015e0c5   \n",
              "199998  ece539fddea592c9a9929013d9b37e6463156ac5   \n",
              "199999  bb053bfdb1dd7024c75e9cad526201dda0b75523   \n",
              "\n",
              "                                                  taxi_id  \\\n",
              "0       5cee8ec7dd48dd171270a4f56ac537aa955fb0404ea5ad...   \n",
              "1       f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...   \n",
              "2       f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...   \n",
              "3       f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...   \n",
              "4       f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...   \n",
              "...                                                   ...   \n",
              "199995  cbb1092f8bd85314dd20167d413b3b0c1a9156ae328df2...   \n",
              "199996  d997a0d4cab61cd52db2c82c78aba9a10d73bf469ff400...   \n",
              "199997  40073e4bbfadf8904891079ddb48e72014816a3ae6405f...   \n",
              "199998  9e36bbce1658ed60bd457bb2187c3a1ed4f47714110ac4...   \n",
              "199999  60aae8e568c93d122bfcfecaa379d47b448750a20ea93a...   \n",
              "\n",
              "           trip_start_timestamp       trip_end_timestamp  trip_seconds  \\\n",
              "0       2017-11-03 11:45:00 UTC  2017-11-03 11:45:00 UTC         365.0   \n",
              "1       2016-10-28 20:30:00 UTC  2016-10-28 20:30:00 UTC         192.0   \n",
              "2       2016-10-28 20:45:00 UTC  2016-10-28 20:45:00 UTC         328.0   \n",
              "3       2016-10-28 21:45:00 UTC  2016-10-28 22:00:00 UTC         706.0   \n",
              "4       2016-10-29 09:45:00 UTC  2016-10-29 10:30:00 UTC        3407.0   \n",
              "...                         ...                      ...           ...   \n",
              "199995  2014-05-07 10:15:00 UTC  2014-05-07 10:30:00 UTC        1020.0   \n",
              "199996  2014-05-23 11:00:00 UTC  2014-05-23 11:30:00 UTC        1500.0   \n",
              "199997  2014-05-03 03:45:00 UTC  2014-05-03 04:00:00 UTC        1200.0   \n",
              "199998  2014-06-07 03:30:00 UTC  2014-06-07 03:45:00 UTC        1080.0   \n",
              "199999  2014-05-14 20:30:00 UTC  2014-05-14 20:45:00 UTC        1080.0   \n",
              "\n",
              "        trip_miles  pickup_census_tract  dropoff_census_tract  \\\n",
              "0              2.3                  NaN                   NaN   \n",
              "1              1.4                  NaN                   NaN   \n",
              "2              2.1                  NaN                   NaN   \n",
              "3              7.6                  NaN                   NaN   \n",
              "4             50.7                  NaN                   NaN   \n",
              "...            ...                  ...                   ...   \n",
              "199995         9.8                  NaN                   NaN   \n",
              "199996         8.7                  NaN                   NaN   \n",
              "199997         7.9                  NaN                   NaN   \n",
              "199998        10.1                  NaN                   NaN   \n",
              "199999         8.2                  NaN                   NaN   \n",
              "\n",
              "        pickup_community_area  dropoff_community_area  ...  extras  \\\n",
              "0                         NaN                     NaN  ...     0.0   \n",
              "1                         NaN                     NaN  ...     0.0   \n",
              "2                         NaN                     NaN  ...     0.0   \n",
              "3                         NaN                     NaN  ...     2.0   \n",
              "4                         NaN                     NaN  ...     0.0   \n",
              "...                       ...                     ...  ...     ...   \n",
              "199995                    8.0                    41.0  ...     0.0   \n",
              "199996                    8.0                    41.0  ...     0.0   \n",
              "199997                    8.0                    41.0  ...     0.0   \n",
              "199998                    8.0                    41.0  ...     0.0   \n",
              "199999                    8.0                    41.0  ...     0.0   \n",
              "\n",
              "        trip_total  payment_type      company  pickup_latitude  \\\n",
              "0             7.20          Cash  Metro Group              NaN   \n",
              "1             5.60          Cash     303 Taxi              NaN   \n",
              "2             7.60          Cash     303 Taxi              NaN   \n",
              "3            22.40          Cash     303 Taxi              NaN   \n",
              "4             0.01          Cash     303 Taxi              NaN   \n",
              "...            ...           ...          ...              ...   \n",
              "199995       22.25          Cash          NaN        41.899602   \n",
              "199996       23.75   Credit Card          NaN        41.899602   \n",
              "199997       22.62   Credit Card          NaN        41.899602   \n",
              "199998       25.45   Credit Card          NaN        41.899602   \n",
              "199999       19.45          Cash          NaN        41.899602   \n",
              "\n",
              "       pickup_longitude                      pickup_location  \\\n",
              "0                   NaN                                  NaN   \n",
              "1                   NaN                                  NaN   \n",
              "2                   NaN                                  NaN   \n",
              "3                   NaN                                  NaN   \n",
              "4                   NaN                                  NaN   \n",
              "...                 ...                                  ...   \n",
              "199995       -87.633308  POINT (-87.6333080367 41.899602111)   \n",
              "199996       -87.633308  POINT (-87.6333080367 41.899602111)   \n",
              "199997       -87.633308  POINT (-87.6333080367 41.899602111)   \n",
              "199998       -87.633308  POINT (-87.6333080367 41.899602111)   \n",
              "199999       -87.633308  POINT (-87.6333080367 41.899602111)   \n",
              "\n",
              "        dropoff_latitude  dropoff_longitude  \\\n",
              "0                    NaN                NaN   \n",
              "1                    NaN                NaN   \n",
              "2                    NaN                NaN   \n",
              "3                    NaN                NaN   \n",
              "4                    NaN                NaN   \n",
              "...                  ...                ...   \n",
              "199995          41.79409         -87.592311   \n",
              "199996          41.79409         -87.592311   \n",
              "199997          41.79409         -87.592311   \n",
              "199998          41.79409         -87.592311   \n",
              "199999          41.79409         -87.592311   \n",
              "\n",
              "                          dropoff_location  \n",
              "0                                      NaN  \n",
              "1                                      NaN  \n",
              "2                                      NaN  \n",
              "3                                      NaN  \n",
              "4                                      NaN  \n",
              "...                                    ...  \n",
              "199995  POINT (-87.592310855 41.794090253)  \n",
              "199996  POINT (-87.592310855 41.794090253)  \n",
              "199997  POINT (-87.592310855 41.794090253)  \n",
              "199998  POINT (-87.592310855 41.794090253)  \n",
              "199999  POINT (-87.592310855 41.794090253)  \n",
              "\n",
              "[200000 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa211b87-eed8-498c-bc47-6c0dc50a2741\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>unique_key</th>\n",
              "      <th>taxi_id</th>\n",
              "      <th>trip_start_timestamp</th>\n",
              "      <th>trip_end_timestamp</th>\n",
              "      <th>trip_seconds</th>\n",
              "      <th>trip_miles</th>\n",
              "      <th>pickup_census_tract</th>\n",
              "      <th>dropoff_census_tract</th>\n",
              "      <th>pickup_community_area</th>\n",
              "      <th>dropoff_community_area</th>\n",
              "      <th>...</th>\n",
              "      <th>extras</th>\n",
              "      <th>trip_total</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>company</th>\n",
              "      <th>pickup_latitude</th>\n",
              "      <th>pickup_longitude</th>\n",
              "      <th>pickup_location</th>\n",
              "      <th>dropoff_latitude</th>\n",
              "      <th>dropoff_longitude</th>\n",
              "      <th>dropoff_location</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>e2afbb4f62fb3865c4d928a39e8a4d1e711ea8da</td>\n",
              "      <td>5cee8ec7dd48dd171270a4f56ac537aa955fb0404ea5ad...</td>\n",
              "      <td>2017-11-03 11:45:00 UTC</td>\n",
              "      <td>2017-11-03 11:45:00 UTC</td>\n",
              "      <td>365.0</td>\n",
              "      <td>2.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.20</td>\n",
              "      <td>Cash</td>\n",
              "      <td>Metro Group</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>a663e8249660b7a3ae13c9a39378ff495564e8e6</td>\n",
              "      <td>f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...</td>\n",
              "      <td>2016-10-28 20:30:00 UTC</td>\n",
              "      <td>2016-10-28 20:30:00 UTC</td>\n",
              "      <td>192.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.60</td>\n",
              "      <td>Cash</td>\n",
              "      <td>303 Taxi</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>a99a7309aea3cf70eed1644c254eb30b150ac4f2</td>\n",
              "      <td>f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...</td>\n",
              "      <td>2016-10-28 20:45:00 UTC</td>\n",
              "      <td>2016-10-28 20:45:00 UTC</td>\n",
              "      <td>328.0</td>\n",
              "      <td>2.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.60</td>\n",
              "      <td>Cash</td>\n",
              "      <td>303 Taxi</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ad0d9e702d67b0e9e7b85dd0750605ff06389c4f</td>\n",
              "      <td>f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...</td>\n",
              "      <td>2016-10-28 21:45:00 UTC</td>\n",
              "      <td>2016-10-28 22:00:00 UTC</td>\n",
              "      <td>706.0</td>\n",
              "      <td>7.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>22.40</td>\n",
              "      <td>Cash</td>\n",
              "      <td>303 Taxi</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>350b48036f17d07f79abf53d04b811da8b6c264c</td>\n",
              "      <td>f871ebb01073ef31155285c13e4cfeb91a9f89492e0cbd...</td>\n",
              "      <td>2016-10-29 09:45:00 UTC</td>\n",
              "      <td>2016-10-29 10:30:00 UTC</td>\n",
              "      <td>3407.0</td>\n",
              "      <td>50.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>Cash</td>\n",
              "      <td>303 Taxi</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199995</th>\n",
              "      <td>7c5eee2d5cfa2efbded24be40fad831ca0e0c983</td>\n",
              "      <td>cbb1092f8bd85314dd20167d413b3b0c1a9156ae328df2...</td>\n",
              "      <td>2014-05-07 10:15:00 UTC</td>\n",
              "      <td>2014-05-07 10:30:00 UTC</td>\n",
              "      <td>1020.0</td>\n",
              "      <td>9.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.25</td>\n",
              "      <td>Cash</td>\n",
              "      <td>NaN</td>\n",
              "      <td>41.899602</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>POINT (-87.6333080367 41.899602111)</td>\n",
              "      <td>41.79409</td>\n",
              "      <td>-87.592311</td>\n",
              "      <td>POINT (-87.592310855 41.794090253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199996</th>\n",
              "      <td>f8d6826d7b5b1e5f33a8fe6f397d0650c4d4e515</td>\n",
              "      <td>d997a0d4cab61cd52db2c82c78aba9a10d73bf469ff400...</td>\n",
              "      <td>2014-05-23 11:00:00 UTC</td>\n",
              "      <td>2014-05-23 11:30:00 UTC</td>\n",
              "      <td>1500.0</td>\n",
              "      <td>8.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23.75</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>NaN</td>\n",
              "      <td>41.899602</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>POINT (-87.6333080367 41.899602111)</td>\n",
              "      <td>41.79409</td>\n",
              "      <td>-87.592311</td>\n",
              "      <td>POINT (-87.592310855 41.794090253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199997</th>\n",
              "      <td>74c5df50d09536ef33bc928e5d20a422a015e0c5</td>\n",
              "      <td>40073e4bbfadf8904891079ddb48e72014816a3ae6405f...</td>\n",
              "      <td>2014-05-03 03:45:00 UTC</td>\n",
              "      <td>2014-05-03 04:00:00 UTC</td>\n",
              "      <td>1200.0</td>\n",
              "      <td>7.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.62</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>NaN</td>\n",
              "      <td>41.899602</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>POINT (-87.6333080367 41.899602111)</td>\n",
              "      <td>41.79409</td>\n",
              "      <td>-87.592311</td>\n",
              "      <td>POINT (-87.592310855 41.794090253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199998</th>\n",
              "      <td>ece539fddea592c9a9929013d9b37e6463156ac5</td>\n",
              "      <td>9e36bbce1658ed60bd457bb2187c3a1ed4f47714110ac4...</td>\n",
              "      <td>2014-06-07 03:30:00 UTC</td>\n",
              "      <td>2014-06-07 03:45:00 UTC</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>10.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.45</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>NaN</td>\n",
              "      <td>41.899602</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>POINT (-87.6333080367 41.899602111)</td>\n",
              "      <td>41.79409</td>\n",
              "      <td>-87.592311</td>\n",
              "      <td>POINT (-87.592310855 41.794090253)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199999</th>\n",
              "      <td>bb053bfdb1dd7024c75e9cad526201dda0b75523</td>\n",
              "      <td>60aae8e568c93d122bfcfecaa379d47b448750a20ea93a...</td>\n",
              "      <td>2014-05-14 20:30:00 UTC</td>\n",
              "      <td>2014-05-14 20:45:00 UTC</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>8.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>19.45</td>\n",
              "      <td>Cash</td>\n",
              "      <td>NaN</td>\n",
              "      <td>41.899602</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>POINT (-87.6333080367 41.899602111)</td>\n",
              "      <td>41.79409</td>\n",
              "      <td>-87.592311</td>\n",
              "      <td>POINT (-87.592310855 41.794090253)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200000 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa211b87-eed8-498c-bc47-6c0dc50a2741')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fa211b87-eed8-498c-bc47-6c0dc50a2741 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fa211b87-eed8-498c-bc47-6c0dc50a2741');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ANALIZA DANYCH"
      ],
      "metadata": {
        "id": "tyqMKhOzTT48"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# SPRAWDZENIE DANYCH POD KĄTEM ZDUPLIKOWANYCH WARTOŚCI\n",
        "data.duplicated().any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zabjX3BkU4mt",
        "outputId": "87592bf3-6c27-4389-a199-d2bc5d7fb1c7"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# WYKAZ KOLUMN WRAZ Z ILOSCIĄ REKORDÓW W NICH ZAWARTYCH\n",
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XjXY7DY7zpmD",
        "outputId": "0328af94-63a6-46d4-f65e-af905b8f0f6c"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 200000 entries, 0 to 199999\n",
            "Data columns (total 23 columns):\n",
            " #   Column                  Non-Null Count   Dtype  \n",
            "---  ------                  --------------   -----  \n",
            " 0   unique_key              200000 non-null  object \n",
            " 1   taxi_id                 200000 non-null  object \n",
            " 2   trip_start_timestamp    200000 non-null  object \n",
            " 3   trip_end_timestamp      200000 non-null  object \n",
            " 4   trip_seconds            199957 non-null  float64\n",
            " 5   trip_miles              199989 non-null  float64\n",
            " 6   pickup_census_tract     88947 non-null   float64\n",
            " 7   dropoff_census_tract    77952 non-null   float64\n",
            " 8   pickup_community_area   170983 non-null  float64\n",
            " 9   dropoff_community_area  126673 non-null  float64\n",
            " 10  fare                    199988 non-null  float64\n",
            " 11  tips                    199988 non-null  float64\n",
            " 12  tolls                   169863 non-null  float64\n",
            " 13  extras                  199988 non-null  float64\n",
            " 14  trip_total              199988 non-null  float64\n",
            " 15  payment_type            200000 non-null  object \n",
            " 16  company                 106332 non-null  object \n",
            " 17  pickup_latitude         170998 non-null  float64\n",
            " 18  pickup_longitude        170998 non-null  float64\n",
            " 19  pickup_location         170998 non-null  object \n",
            " 20  dropoff_latitude        126673 non-null  float64\n",
            " 21  dropoff_longitude       126673 non-null  float64\n",
            " 22  dropoff_location        126673 non-null  object \n",
            "dtypes: float64(15), object(8)\n",
            "memory usage: 35.1+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# POWYŻEJ WIDAĆ, IŻ TYLKO 4 PIERWSZE KOLUMNY ORAZ KOLUMNA Z RODZAJEM PŁATNOŚCI ZAWIERAJĄ KOMPLETNE DANE.\n",
        "# W ZALEŻNOŚCI OD KIERUNKU W JAKIM MIAŁABY ZMIERZAĆ ANALIZA I CO DOKŁADNIE CHCIELIBIŚMY OSIĄGNĄĆ\n",
        "#NALEŻAŁOBY OCZYŚCIĆ DANE Z WIERSZY KTÓRE WYBRANEJ LUB JAKIEJKOLWIEK KOLUMNIE MAJĄ BRAKUJĄCE DANE. POLECENIE JAK PONIŻEJ:"
      ],
      "metadata": {
        "id": "l_ZWU0n2PXk2"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#data = data.dropna(axis=0)\n",
        "#data.info()"
      ],
      "metadata": {
        "id": "RlpUCO2oP8YI"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# NA POTRZEBY DALSZYCH DZIAŁAŃ ZOSTAWIAM WSZYSTKIE DANE\n",
        "\n",
        "# UJĘCIE STATYSTYCZNE DLA POSZCZEGÓLNYCH KOLUMN\n",
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "DFBzgogez8GM",
        "outputId": "a8fc5701-8bdb-461e-8e49-08ce552c0244"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        trip_seconds     trip_miles  pickup_census_tract  \\\n",
              "count  199957.000000  199989.000000         8.894700e+04   \n",
              "mean     1017.396450       5.543039         1.703137e+10   \n",
              "std      2151.855247       7.625035         3.366041e+05   \n",
              "min         0.000000       0.000000         1.703101e+10   \n",
              "25%       420.000000       1.300000         1.703108e+10   \n",
              "50%       720.000000       2.500000         1.703128e+10   \n",
              "75%      1200.000000       7.000000         1.703183e+10   \n",
              "max     86340.000000     388.100000         1.703198e+10   \n",
              "\n",
              "       dropoff_census_tract  pickup_community_area  dropoff_community_area  \\\n",
              "count          7.795200e+04          170983.000000           126673.000000   \n",
              "mean           1.703127e+10              27.914453               19.381131   \n",
              "std            1.434936e+05              24.662098               12.422530   \n",
              "min            1.703101e+10               1.000000                1.000000   \n",
              "25%            1.703128e+10               8.000000                8.000000   \n",
              "50%            1.703128e+10              24.000000               28.000000   \n",
              "75%            1.703133e+10              32.000000               33.000000   \n",
              "max            1.703184e+10              77.000000               60.000000   \n",
              "\n",
              "                fare           tips          tolls         extras  \\\n",
              "count  199988.000000  199988.000000  169863.000000  199988.000000   \n",
              "mean       15.666398       1.481971       0.004999       2.107558   \n",
              "std        41.823396       3.466699       0.485594       5.940803   \n",
              "min         0.000000       0.000000       0.000000       0.000000   \n",
              "25%         6.750000       0.000000       0.000000       0.000000   \n",
              "50%        10.000000       0.000000       0.000000       0.000000   \n",
              "75%        18.750000       2.000000       0.000000       1.000000   \n",
              "max      9211.590000     199.000000      75.000000      99.500000   \n",
              "\n",
              "          trip_total  pickup_latitude  pickup_longitude  dropoff_latitude  \\\n",
              "count  199988.000000    170998.000000     170998.000000     126673.000000   \n",
              "mean       19.342440        41.910256        -87.684178         41.894141   \n",
              "std        44.482694         0.046776          0.099087          0.040602   \n",
              "min         0.000000        41.660136        -87.913625         41.660136   \n",
              "25%         7.650000        41.880994        -87.676356         41.859350   \n",
              "50%        11.500000        41.899156        -87.633308         41.879255   \n",
              "75%        21.050000        41.944227        -87.625192         41.909496   \n",
              "max      9299.250000        42.016046        -87.534903         42.009150   \n",
              "\n",
              "       dropoff_longitude  \n",
              "count      126673.000000  \n",
              "mean          -87.637959  \n",
              "std             0.023971  \n",
              "min           -87.759857  \n",
              "25%           -87.642649  \n",
              "50%           -87.634156  \n",
              "75%           -87.630964  \n",
              "max           -87.534903  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-400f9c1c-21c3-4f3e-a1bd-7ea35e4ea23f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>trip_seconds</th>\n",
              "      <th>trip_miles</th>\n",
              "      <th>pickup_census_tract</th>\n",
              "      <th>dropoff_census_tract</th>\n",
              "      <th>pickup_community_area</th>\n",
              "      <th>dropoff_community_area</th>\n",
              "      <th>fare</th>\n",
              "      <th>tips</th>\n",
              "      <th>tolls</th>\n",
              "      <th>extras</th>\n",
              "      <th>trip_total</th>\n",
              "      <th>pickup_latitude</th>\n",
              "      <th>pickup_longitude</th>\n",
              "      <th>dropoff_latitude</th>\n",
              "      <th>dropoff_longitude</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>199957.000000</td>\n",
              "      <td>199989.000000</td>\n",
              "      <td>8.894700e+04</td>\n",
              "      <td>7.795200e+04</td>\n",
              "      <td>170983.000000</td>\n",
              "      <td>126673.000000</td>\n",
              "      <td>199988.000000</td>\n",
              "      <td>199988.000000</td>\n",
              "      <td>169863.000000</td>\n",
              "      <td>199988.000000</td>\n",
              "      <td>199988.000000</td>\n",
              "      <td>170998.000000</td>\n",
              "      <td>170998.000000</td>\n",
              "      <td>126673.000000</td>\n",
              "      <td>126673.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1017.396450</td>\n",
              "      <td>5.543039</td>\n",
              "      <td>1.703137e+10</td>\n",
              "      <td>1.703127e+10</td>\n",
              "      <td>27.914453</td>\n",
              "      <td>19.381131</td>\n",
              "      <td>15.666398</td>\n",
              "      <td>1.481971</td>\n",
              "      <td>0.004999</td>\n",
              "      <td>2.107558</td>\n",
              "      <td>19.342440</td>\n",
              "      <td>41.910256</td>\n",
              "      <td>-87.684178</td>\n",
              "      <td>41.894141</td>\n",
              "      <td>-87.637959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2151.855247</td>\n",
              "      <td>7.625035</td>\n",
              "      <td>3.366041e+05</td>\n",
              "      <td>1.434936e+05</td>\n",
              "      <td>24.662098</td>\n",
              "      <td>12.422530</td>\n",
              "      <td>41.823396</td>\n",
              "      <td>3.466699</td>\n",
              "      <td>0.485594</td>\n",
              "      <td>5.940803</td>\n",
              "      <td>44.482694</td>\n",
              "      <td>0.046776</td>\n",
              "      <td>0.099087</td>\n",
              "      <td>0.040602</td>\n",
              "      <td>0.023971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.703101e+10</td>\n",
              "      <td>1.703101e+10</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>41.660136</td>\n",
              "      <td>-87.913625</td>\n",
              "      <td>41.660136</td>\n",
              "      <td>-87.759857</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>420.000000</td>\n",
              "      <td>1.300000</td>\n",
              "      <td>1.703108e+10</td>\n",
              "      <td>1.703128e+10</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>6.750000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.650000</td>\n",
              "      <td>41.880994</td>\n",
              "      <td>-87.676356</td>\n",
              "      <td>41.859350</td>\n",
              "      <td>-87.642649</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>720.000000</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>1.703128e+10</td>\n",
              "      <td>1.703128e+10</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.500000</td>\n",
              "      <td>41.899156</td>\n",
              "      <td>-87.633308</td>\n",
              "      <td>41.879255</td>\n",
              "      <td>-87.634156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1200.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>1.703183e+10</td>\n",
              "      <td>1.703133e+10</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>33.000000</td>\n",
              "      <td>18.750000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.050000</td>\n",
              "      <td>41.944227</td>\n",
              "      <td>-87.625192</td>\n",
              "      <td>41.909496</td>\n",
              "      <td>-87.630964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>86340.000000</td>\n",
              "      <td>388.100000</td>\n",
              "      <td>1.703198e+10</td>\n",
              "      <td>1.703184e+10</td>\n",
              "      <td>77.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>9211.590000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>75.000000</td>\n",
              "      <td>99.500000</td>\n",
              "      <td>9299.250000</td>\n",
              "      <td>42.016046</td>\n",
              "      <td>-87.534903</td>\n",
              "      <td>42.009150</td>\n",
              "      <td>-87.534903</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-400f9c1c-21c3-4f3e-a1bd-7ea35e4ea23f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-400f9c1c-21c3-4f3e-a1bd-7ea35e4ea23f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-400f9c1c-21c3-4f3e-a1bd-7ea35e4ea23f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# POWYŻSZA TABELA POZWALA NAM ZAPOZNAĆ SIĘ Z WARTOŚCIAMI MIN/MAX/ŚREDNIA ORAZ ODCHYLENIE STD DLA KAŻDEJ Z KOLUMN\n",
        "# NAJDŁUŻSZA PODRÓŻ WYNIOSŁA - 388.1 MIL, ŚREDNIA DŁUGOŚĆ KURSU TO 5.54 MILE\n",
        "# NAJDROŻSZA(FARE) KOSZTOWAŁA 9211.59, ŚREDNIA CENA KURSU TO 15.66"
      ],
      "metadata": {
        "id": "W9QKhua2N-ee"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## TWORZENIE DODATKOWYH KOLUMN, ORGANIZACJA DANYCH WG DNIA TYGODNIA, W KTÓRYCH REALIZOWANO KURS, WIZUALIZACJA"
      ],
      "metadata": {
        "id": "PVse3WawTgJ1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# BAZUJĄC NA DACIE STARTU PODRÓŻY STWORZYŁEM KOLUMNĘ Z DATĄ, BEZ DOKŁADNEJ GODZINY ORAZ Z SAMYM ROKIEM WYKONANIA KURSU.\n",
        "# POZWOLIŁO TO ZLICZYĆ ILOŚĆ KURSÓW DLA KAŻDEGO ROKU\n",
        "data.sort_values(by='trip_start_timestamp')\n",
        "data['date'] = data['trip_start_timestamp'].str[:10]\n",
        "data['year'] = data['date'].str[:4]\n",
        "data['year'].value_counts().sort_index()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BC-LoL8XxUBP",
        "outputId": "916918d0-91e1-4abf-8369-eebabbdedcc8"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2014    93668\n",
              "2016    14721\n",
              "2017    90280\n",
              "2018     1331\n",
              "Name: year, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# DANE ZAWARTE W PLIKU PRZEDSTAWIAJĄ OKRES 2014 - 2018, \n",
        "# ILOŚĆ REKORDÓW DLA POSZCZEGÓLNYCH LAT NAKAZUJE STWIERDZIĆ, IŻ NIE SĄ ONE KOMPLETNE,\n",
        "# PONADTO W OGÓLE NIE ZAWIERAJĄ KURSÓW WYKONANYCH W 2015 ROKU\n",
        "\n",
        "# ABY NAJEFEKTYWNIEJ WYKORZYSTAĆ DOSTARCZONE DANE ZAMIERZAM INACZEJ POSORTOWAĆ DANE \n",
        "# - PRZYPISUJĄC IM DOKŁADNY DZIEŃ TYGODNIA DLA KAŻDEGO KURSU"
      ],
      "metadata": {
        "id": "XGHc4eBUxuWc"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# PRZYPISANIE DNIA TYGODNIA NA PODSTAWIE KOLUMNY 'DATE'\n",
        "data['date'] = pd.to_datetime(data['date'], errors='coerce', format='%Y-%m-%d')\n",
        "data['day_of_week'] = data['date'].dt.dayofweek\n",
        "data['day_of_week_name'] = data['date'].dt.day_name()"
      ],
      "metadata": {
        "id": "zNYVoYCOUNL9"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# STWORZENIE NOWEGO DATA FRAME'U PRZECHOWUJĄCEGO ILOŚĆ KURSÓW WYKONANYCH W POSZCZEGÓLNE DNI TYGODNIA\n",
        "days = ['Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\n",
        "data_days = pd.DataFrame(data['day_of_week_name'].value_counts().reindex(days))\n",
        "data_days.rename(columns = {'day_of_week_name':'number_of_trips'}, inplace = True)\n",
        "data_days"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "PAp0-LPezBx6",
        "outputId": "f930ca8b-043b-45f6-e4eb-d75ddec71e3f"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           number_of_trips\n",
              "Monday               26950\n",
              "Tuesday              28630\n",
              "Wednesday            28589\n",
              "Thursday             31822\n",
              "Friday               31941\n",
              "Saturday             27709\n",
              "Sunday               24359"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7adbcbf6-3db8-49ea-a66a-e9867724da0d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>number_of_trips</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Monday</th>\n",
              "      <td>26950</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tuesday</th>\n",
              "      <td>28630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wednesday</th>\n",
              "      <td>28589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Thursday</th>\n",
              "      <td>31822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Friday</th>\n",
              "      <td>31941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Saturday</th>\n",
              "      <td>27709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sunday</th>\n",
              "      <td>24359</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7adbcbf6-3db8-49ea-a66a-e9867724da0d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7adbcbf6-3db8-49ea-a66a-e9867724da0d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7adbcbf6-3db8-49ea-a66a-e9867724da0d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# WYKRES DLA KURSÓW WYKONANYCH W POSZCZEGÓLNE DNI TYGODNIA\n",
        "plt.figure(figsize=(15,7))\n",
        "sns.countplot(x=data['day_of_week_name'],palette='crest',order=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        },
        "id": "8zFukN6H06IB",
        "outputId": "21cd51e3-5530-4598-fb07-b51550eb3ce4"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f7d1c1595e0>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ILOŚĆ KURSÓW WYKONANYCH PRZEZ POSZCZEGÓLNYCH PRZEWOŹNIKÓW\n",
        "data['company'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ldTndXJVgE2V",
        "outputId": "fa3961cf-0504-49a3-8a4e-4eb956546822"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Chicago Carriage Cab Corp               18457\n",
              "303 Taxi                                17705\n",
              "City Service                             9989\n",
              "Medallion Leasin                         9306\n",
              "Taxi Affiliation Service Yellow          8937\n",
              "Sun Taxi                                 8625\n",
              "Globe Taxi                               6387\n",
              "Metro Group                              5986\n",
              "Yellow Cab                               3148\n",
              "Nova Taxi Affiliation Llc                3003\n",
              "Patriot Taxi Dba Peace Taxi Associat     2803\n",
              "Norshore Cab                             1939\n",
              "24 Seven Taxi                            1878\n",
              "Checker Taxi Affiliation                 1802\n",
              "Chicago Independents                     1241\n",
              "Flash Cab                                1057\n",
              "Chicago Taxicab                           911\n",
              "Blue Diamond                              792\n",
              "Gold Coast Taxi                           763\n",
              "Service Taxi Association                  462\n",
              "Setare Inc                                288\n",
              "Metro Jet Taxi A                          287\n",
              "Checker Taxi                              190\n",
              "Leonard Cab Co                            176\n",
              "American United Taxi Affiliation          130\n",
              "American United                            41\n",
              "Chicago Star Taxicab                       23\n",
              "5 Star Taxi                                 6\n",
              "Name: company, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# METODY PŁATNOŚCI WRAZ Z ILOŚCIĄ ICH UŻYCIA\n",
        "data['payment_type'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qDaFOOHEoPll",
        "outputId": "cd75b63e-49b0-4801-cbde-eb89d1a078a7"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cash           130485\n",
              "Credit Card     68920\n",
              "Prcard            431\n",
              "Mobile             74\n",
              "Pcard              65\n",
              "Split              25\n",
              "Name: payment_type, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# PONIŻEJ ZAMIERZAM SPRAWDZIĆ KWOTY NAPIWKÓW PRZY PŁATNOŚCI GOTÓWKĄ \n",
        "# ORAZ INNYMI FORMAMI PŁATNOŚCI "
      ],
      "metadata": {
        "id": "km0A55n84LTf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cash = data[(data['payment_type']=='Cash')&(data['tips']>0)]"
      ],
      "metadata": {
        "id": "lHWKD5mdtPLN"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cash['tips'].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "phBkwHDsxGsJ",
        "outputId": "53e3950a-8bfe-451c-8588-5de4cb5b623c"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    237.000000\n",
              "mean       5.656540\n",
              "std        9.758828\n",
              "min        0.500000\n",
              "25%        2.000000\n",
              "50%        3.000000\n",
              "75%        6.730000\n",
              "max      126.050000\n",
              "Name: tips, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "other_payment = data[(data['payment_type']!='Cash')&(data['tips']>0)]"
      ],
      "metadata": {
        "id": "I4JG5hybxHo3"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "other_payment['tips'].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4mWicrGiyYii",
        "outputId": "c21a6360-33e9-460a-d468-a6a6c77a623a"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    62192.000000\n",
              "mean         4.743952\n",
              "std          4.766535\n",
              "min          0.010000\n",
              "25%          2.000000\n",
              "50%          3.000000\n",
              "75%          5.810000\n",
              "max        199.000000\n",
              "Name: tips, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ANALIZA DANYCH NAJWIĘKSZEGO PRZEWOŹNIKA W ROKU 2017"
      ],
      "metadata": {
        "id": "rKifZrjetFZB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ChicagoCarCabCorp_2017 = data[(data['year'] == '2017')&(data['company'] == 'Chicago Carriage Cab Corp')]\n",
        "ChicagoCarCabCorp_2017.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "id": "c5NJe4r8q3vU",
        "outputId": "50db4c19-583b-4656-d4a1-3b44b3a0afc9"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                     unique_key  \\\n",
              "94291  081cca5b92ed36e4031e3044a1fedcfd9bc9b87d   \n",
              "94297  50edceec93dca25d5015d73d1bc6e543f38707f4   \n",
              "94298  f9f943a8f0f2060a30044fc01c4eafc142b5b01e   \n",
              "94318  73785949dc664c462c8e297fe7c83be8d771422e   \n",
              "94322  9e79c1ebe604c2d9d9c407cbf0019efda0ba840a   \n",
              "\n",
              "                                                 taxi_id  \\\n",
              "94291  6a2c9d2b17c17c8c7621c7f8bd3621fde6366bcaa1111b...   \n",
              "94297  564b5186ce0b917f390ddfb941ac0edbd553abe7fc860b...   \n",
              "94298  4ddcdbfaa3447ef6507004a4c6005769aa300f06a0194c...   \n",
              "94318  1baee7c96b22d91e12ab05ec4a61eca249c92181d74a7a...   \n",
              "94322  e85522f2d37a6efacf8dae65b044a7df8b46d3a2169460...   \n",
              "\n",
              "          trip_start_timestamp       trip_end_timestamp  trip_seconds  \\\n",
              "94291  2017-08-12 01:45:00 UTC  2017-08-12 02:00:00 UTC        1347.0   \n",
              "94297  2017-08-17 03:15:00 UTC  2017-08-17 03:45:00 UTC        1205.0   \n",
              "94298  2017-08-08 00:00:00 UTC  2017-08-08 00:15:00 UTC        1541.0   \n",
              "94318  2017-08-22 08:15:00 UTC  2017-08-22 09:00:00 UTC        2553.0   \n",
              "94322  2017-08-24 10:00:00 UTC  2017-08-24 10:45:00 UTC        2876.0   \n",
              "\n",
              "       trip_miles  pickup_census_tract  dropoff_census_tract  \\\n",
              "94291       12.15                  NaN                   NaN   \n",
              "94297        8.16                  NaN                   NaN   \n",
              "94298       14.53                  NaN                   NaN   \n",
              "94318       21.74                  NaN                   NaN   \n",
              "94322       12.79                  NaN                   NaN   \n",
              "\n",
              "       pickup_community_area  dropoff_community_area  ...  pickup_latitude  \\\n",
              "94291                   14.0                     NaN  ...        41.968069   \n",
              "94297                   14.0                     NaN  ...        41.968069   \n",
              "94298                   14.0                     NaN  ...        41.968069   \n",
              "94318                   14.0                     NaN  ...        41.968069   \n",
              "94322                   14.0                     NaN  ...        41.968069   \n",
              "\n",
              "       pickup_longitude                   pickup_location  dropoff_latitude  \\\n",
              "94291        -87.721559  POINT (-87.7215590627 41.968069)               NaN   \n",
              "94297        -87.721559  POINT (-87.7215590627 41.968069)               NaN   \n",
              "94298        -87.721559  POINT (-87.7215590627 41.968069)               NaN   \n",
              "94318        -87.721559  POINT (-87.7215590627 41.968069)               NaN   \n",
              "94322        -87.721559  POINT (-87.7215590627 41.968069)               NaN   \n",
              "\n",
              "       dropoff_longitude dropoff_location       date  year  day_of_week  \\\n",
              "94291                NaN              NaN 2017-08-12  2017            5   \n",
              "94297                NaN              NaN 2017-08-17  2017            3   \n",
              "94298                NaN              NaN 2017-08-08  2017            1   \n",
              "94318                NaN              NaN 2017-08-22  2017            1   \n",
              "94322                NaN              NaN 2017-08-24  2017            3   \n",
              "\n",
              "      day_of_week_name  \n",
              "94291         Saturday  \n",
              "94297         Thursday  \n",
              "94298          Tuesday  \n",
              "94318          Tuesday  \n",
              "94322         Thursday  \n",
              "\n",
              "[5 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-50252767-6b52-4534-912b-a823f20f6bb3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>unique_key</th>\n",
              "      <th>taxi_id</th>\n",
              "      <th>trip_start_timestamp</th>\n",
              "      <th>trip_end_timestamp</th>\n",
              "      <th>trip_seconds</th>\n",
              "      <th>trip_miles</th>\n",
              "      <th>pickup_census_tract</th>\n",
              "      <th>dropoff_census_tract</th>\n",
              "      <th>pickup_community_area</th>\n",
              "      <th>dropoff_community_area</th>\n",
              "      <th>...</th>\n",
              "      <th>pickup_latitude</th>\n",
              "      <th>pickup_longitude</th>\n",
              "      <th>pickup_location</th>\n",
              "      <th>dropoff_latitude</th>\n",
              "      <th>dropoff_longitude</th>\n",
              "      <th>dropoff_location</th>\n",
              "      <th>date</th>\n",
              "      <th>year</th>\n",
              "      <th>day_of_week</th>\n",
              "      <th>day_of_week_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>94291</th>\n",
              "      <td>081cca5b92ed36e4031e3044a1fedcfd9bc9b87d</td>\n",
              "      <td>6a2c9d2b17c17c8c7621c7f8bd3621fde6366bcaa1111b...</td>\n",
              "      <td>2017-08-12 01:45:00 UTC</td>\n",
              "      <td>2017-08-12 02:00:00 UTC</td>\n",
              "      <td>1347.0</td>\n",
              "      <td>12.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>41.968069</td>\n",
              "      <td>-87.721559</td>\n",
              "      <td>POINT (-87.7215590627 41.968069)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017-08-12</td>\n",
              "      <td>2017</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94297</th>\n",
              "      <td>50edceec93dca25d5015d73d1bc6e543f38707f4</td>\n",
              "      <td>564b5186ce0b917f390ddfb941ac0edbd553abe7fc860b...</td>\n",
              "      <td>2017-08-17 03:15:00 UTC</td>\n",
              "      <td>2017-08-17 03:45:00 UTC</td>\n",
              "      <td>1205.0</td>\n",
              "      <td>8.16</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>41.968069</td>\n",
              "      <td>-87.721559</td>\n",
              "      <td>POINT (-87.7215590627 41.968069)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017-08-17</td>\n",
              "      <td>2017</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94298</th>\n",
              "      <td>f9f943a8f0f2060a30044fc01c4eafc142b5b01e</td>\n",
              "      <td>4ddcdbfaa3447ef6507004a4c6005769aa300f06a0194c...</td>\n",
              "      <td>2017-08-08 00:00:00 UTC</td>\n",
              "      <td>2017-08-08 00:15:00 UTC</td>\n",
              "      <td>1541.0</td>\n",
              "      <td>14.53</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>41.968069</td>\n",
              "      <td>-87.721559</td>\n",
              "      <td>POINT (-87.7215590627 41.968069)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017-08-08</td>\n",
              "      <td>2017</td>\n",
              "      <td>1</td>\n",
              "      <td>Tuesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94318</th>\n",
              "      <td>73785949dc664c462c8e297fe7c83be8d771422e</td>\n",
              "      <td>1baee7c96b22d91e12ab05ec4a61eca249c92181d74a7a...</td>\n",
              "      <td>2017-08-22 08:15:00 UTC</td>\n",
              "      <td>2017-08-22 09:00:00 UTC</td>\n",
              "      <td>2553.0</td>\n",
              "      <td>21.74</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>41.968069</td>\n",
              "      <td>-87.721559</td>\n",
              "      <td>POINT (-87.7215590627 41.968069)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017-08-22</td>\n",
              "      <td>2017</td>\n",
              "      <td>1</td>\n",
              "      <td>Tuesday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94322</th>\n",
              "      <td>9e79c1ebe604c2d9d9c407cbf0019efda0ba840a</td>\n",
              "      <td>e85522f2d37a6efacf8dae65b044a7df8b46d3a2169460...</td>\n",
              "      <td>2017-08-24 10:00:00 UTC</td>\n",
              "      <td>2017-08-24 10:45:00 UTC</td>\n",
              "      <td>2876.0</td>\n",
              "      <td>12.79</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>41.968069</td>\n",
              "      <td>-87.721559</td>\n",
              "      <td>POINT (-87.7215590627 41.968069)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017-08-24</td>\n",
              "      <td>2017</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50252767-6b52-4534-912b-a823f20f6bb3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-50252767-6b52-4534-912b-a823f20f6bb3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-50252767-6b52-4534-912b-a823f20f6bb3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ChicagoCarCabCorp_2017[['trip_seconds','trip_miles','fare','tips','trip_total']].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "yFEYdu5xrvCB",
        "outputId": "f0adc74c-c7b2-40ab-f54d-c1b0c7ccd64d"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       trip_seconds    trip_miles          fare          tips    trip_total\n",
              "count  18441.000000  18456.000000  18457.000000  18457.000000  18457.000000\n",
              "mean    1151.353723      5.344078     16.828813      1.791114     21.437260\n",
              "std     2887.912883      7.028603     16.641203      3.723539     23.729959\n",
              "min        1.000000      0.000000      0.000000      0.000000      0.000000\n",
              "25%      491.000000      1.470000      7.750000      0.000000      9.000000\n",
              "50%      740.000000      2.410000     10.500000      0.000000     12.500000\n",
              "75%     1212.000000      6.410000     19.500000      2.000000     22.750000\n",
              "max    85633.000000    156.210000    475.000000    155.000000    475.500000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6f7963c1-07e1-4a99-bfcf-8e2df4162823\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>trip_seconds</th>\n",
              "      <th>trip_miles</th>\n",
              "      <th>fare</th>\n",
              "      <th>tips</th>\n",
              "      <th>trip_total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>18441.000000</td>\n",
              "      <td>18456.000000</td>\n",
              "      <td>18457.000000</td>\n",
              "      <td>18457.000000</td>\n",
              "      <td>18457.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1151.353723</td>\n",
              "      <td>5.344078</td>\n",
              "      <td>16.828813</td>\n",
              "      <td>1.791114</td>\n",
              "      <td>21.437260</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2887.912883</td>\n",
              "      <td>7.028603</td>\n",
              "      <td>16.641203</td>\n",
              "      <td>3.723539</td>\n",
              "      <td>23.729959</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>491.000000</td>\n",
              "      <td>1.470000</td>\n",
              "      <td>7.750000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>740.000000</td>\n",
              "      <td>2.410000</td>\n",
              "      <td>10.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>12.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1212.000000</td>\n",
              "      <td>6.410000</td>\n",
              "      <td>19.500000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>22.750000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>85633.000000</td>\n",
              "      <td>156.210000</td>\n",
              "      <td>475.000000</td>\n",
              "      <td>155.000000</td>\n",
              "      <td>475.500000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f7963c1-07e1-4a99-bfcf-8e2df4162823')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6f7963c1-07e1-4a99-bfcf-8e2df4162823 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6f7963c1-07e1-4a99-bfcf-8e2df4162823');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    }
  ]
}